# Generated by Django 5.2.6 on 2025-09-25 19:00

import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Repair",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the repair record",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Date and time when the repair was initiated",
                    ),
                ),
                (
                    "repair_code",
                    models.CharField(
                        blank=True,
                        help_text="Auto-generated repair code",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "repair_type",
                    models.CharField(
                        choices=[
                            ("warranty", "Warranty Repair"),
                            ("paid", "Paid Repair"),
                            ("emergency", "Emergency Repair"),
                            ("maintenance", "Preventive Maintenance"),
                            ("replacement", "Part Replacement"),
                            ("diagnostic", "Diagnostic Check"),
                            ("software", "Software Repair"),
                            ("hardware", "Hardware Repair"),
                        ],
                        default="warranty",
                        help_text="Type of repair being performed",
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("requested", "Repair Requested"),
                            ("diagnosed", "Diagnosed"),
                            ("in_progress", "In Progress"),
                            ("waiting_parts", "Waiting for Parts"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("failed", "Repair Failed"),
                        ],
                        default="requested",
                        help_text="Current status of the repair",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low Priority"),
                            ("normal", "Normal Priority"),
                            ("high", "High Priority"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        help_text="Repair priority level",
                        max_length=20,
                    ),
                ),
                (
                    "problem_description",
                    models.TextField(
                        help_text="Description of the problem reported by customer"
                    ),
                ),
                (
                    "diagnosis",
                    models.TextField(
                        blank=True, help_text="Technical diagnosis of the problem"
                    ),
                ),
                (
                    "repair_notes",
                    models.TextField(
                        blank=True, help_text="Detailed notes about the repair process"
                    ),
                ),
                (
                    "technician_name",
                    models.CharField(
                        blank=True,
                        help_text="Name of the technician handling the repair",
                        max_length=100,
                    ),
                ),
                (
                    "estimated_cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Estimated repair cost",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "actual_cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Actual repair cost",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "parts_used",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of parts used in the repair",
                    ),
                ),
                (
                    "started_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the repair work actually started",
                        null=True,
                    ),
                ),
                (
                    "completed_date",
                    models.DateTimeField(
                        blank=True, help_text="When the repair was completed", null=True
                    ),
                ),
                (
                    "estimated_completion",
                    models.DateTimeField(
                        blank=True, help_text="Estimated completion date", null=True
                    ),
                ),
                (
                    "is_under_warranty",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this repair is covered under warranty",
                    ),
                ),
                (
                    "warranty_void",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this repair voids the product warranty",
                    ),
                ),
                (
                    "quality_check_passed",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the repair passed quality check",
                    ),
                ),
                (
                    "customer_satisfaction",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "1 Star"),
                            (2, "2 Stars"),
                            (3, "3 Stars"),
                            (4, "4 Stars"),
                            (5, "5 Stars"),
                        ],
                        help_text="Customer satisfaction rating (1-5 stars)",
                        null=True,
                    ),
                ),
                (
                    "customer_contacted",
                    models.BooleanField(
                        default=False,
                        help_text="Whether customer has been contacted about repair status",
                    ),
                ),
                (
                    "ready_for_pickup",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the repaired item is ready for customer pickup",
                    ),
                ),
                (
                    "delivered_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the repaired item was delivered to customer",
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When the repair record was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When the repair record was last updated",
                    ),
                ),
            ],
            options={
                "verbose_name": "Repair",
                "verbose_name_plural": "Repairs",
                "ordering": ["-date", "-created_at"],
            },
        ),
    ]
