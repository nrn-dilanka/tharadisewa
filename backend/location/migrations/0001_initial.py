# Generated by Django 5.2.6 on 2025-09-25 17:57

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("shop", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomerLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        decimal_places=8,
                        help_text="Longitude coordinate (-180.0 to 180.0)",
                        max_digits=11,
                        validators=[
                            django.core.validators.MinValueValidator(-180.0),
                            django.core.validators.MaxValueValidator(180.0),
                        ],
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        decimal_places=8,
                        help_text="Latitude coordinate (-90.0 to 90.0)",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(-90.0),
                            django.core.validators.MaxValueValidator(90.0),
                        ],
                    ),
                ),
                (
                    "location_name",
                    models.CharField(
                        blank=True,
                        help_text="Optional name for this location",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "address_description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the location address",
                        null=True,
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(
                        default=False,
                        help_text="Is this the primary location for the shop?",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Is this location active?"
                    ),
                ),
                (
                    "accuracy_radius",
                    models.PositiveIntegerField(
                        blank=True, help_text="GPS accuracy radius in meters", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "shop",
                    models.ForeignKey(
                        help_text="Related shop",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_locations",
                        to="shop.shop",
                    ),
                ),
            ],
            options={
                "verbose_name": "Customer Location",
                "verbose_name_plural": "Customer Locations",
                "db_table": "customer_locations",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["longitude", "latitude"],
                        name="customer_lo_longitu_e53542_idx",
                    ),
                    models.Index(
                        fields=["shop", "is_active"],
                        name="customer_lo_shop_id_977f72_idx",
                    ),
                ],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("shop", "longitude", "latitude"),
                        name="unique_shop_coordinates",
                    )
                ],
            },
        ),
    ]
